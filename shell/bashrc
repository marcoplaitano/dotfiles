# File:   ~/.config/shell/bashrc
# Author: Marco Plaitano
# Github: https://github.com/marcoplaitano


# If not running interactively, don't do anything.
case $- in
    *i*) ;;
      *) return ;;
esac


################################################################################
###  OPTIONS
################################################################################

# Check and update (if necessary) LINES and COLUMNS after each command.
shopt -s checkwinsize

# Allow usage of comments in the shell.
shopt -s interactive_comments

# Append to the history file instead of overwriting.
shopt -s histappend

# Autocorrect spelling errors when using cd command.
shopt -s cdspell

# Automatically expand directory globs and fix directory name typos whilst
# completing.
# Note, this works in conjuction with the cdspell option listed above.
shopt -s direxpand dirspell

# Enable the ** globstar recursive pattern in file and directory expansions.
# For example, ls **/*.txt will list all text files in the current directory
# hierarchy.
shopt -s globstar

# Don't exit shell but print background jobs that are still running; to force
# quit, type 'exit' right after.
shopt -s checkjobs

# Save multi-line commands in one history entry.
shopt -s cmdhist

# Expand aliases.
shopt -s expand_aliases

# Set bash history to ignore duplicates and commands starting with spaces.
export HISTCONTROL=ignoreboth

# The maximum number of lines in the history file.
HISTFILESIZE=10000
# The number of entries to save in the history file.
HISTSIZE=10000

# Declare file in which to write history.
export HISTFILE=$HOME/.cache/.bash_history

# Commands to ignore.
export HISTIGNORE="?:clear:rm*"

# Disable Ctrl+S & Ctrl+Q to freeze/unfreeze the terminal.
stty -ixon

# Set VI mode.
set -o vi
bind -m vi-command 'Control-l: clear-screen'
bind -m vi-insert 'Control-l: clear-screen'

# To be able to use GPG in SSH connections.
export GPG_TTY=$(tty)
# To force tty pinentry when calling pass or GPG from the terminal.
export PINENTRY_USER_DATA="tty"



################################################################################
###  COMPLETION
################################################################################

if ! shopt -oq posix; then
    # Bash
    if [[ -f /usr/share/bash-completion/bash_completion ]]; then
        source /usr/share/bash-completion/bash_completion
    elif [[ -f /etc/bash_completion ]]; then
        source /etc/bash_completion
    fi
    # Git
    if [[ -f /usr/share/bash-completion/completions/git ]]; then
        source /usr/share/bash-completion/completions/git
        export GIT_COMPLETION_SHOW_ALL=1
    fi
fi



################################################################################
###  START UP COMMANDS
################################################################################

# Only run the following commands if the terminal is:
# - NOT launched from vscode.
# - NOT a tty session.
# - NOT a root user session.
if [[ $TERM_PROGRAM != "vscode" && $(tty) != /dev/tty* && "$EUID" -ne 0 ]]; then
    if [[ $TMUX_AUTO -eq 1 ]]; then
        # If tmux is installed and a graphical environment is running:
        # try attaching to an existing session or create a new one.
        if [[ -x "$(command -v tmux)" && -n "${DISPLAY}" ]]; then
            [[ -z "${TMUX}" ]] && {
                tmux attach -t main || tmux new -s main
            } &>/dev/null
        fi
    fi

    # Show a welcome message at every first login after system's boot.
    login_message --once
fi



################################################################################
###  PROMPT
################################################################################

# Show info about current git repository.
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWUPSTREAM=1
GIT_PS1_STATESEPARATOR=" "
GIT_PS1_SHOWCONFLICTSTATE="yes"
GIT_PS1_HIDE_IF_PWD_IGNORED=1
GIT_PROMPT_IGNORE_SUBMODULES=1
source $HOME/.config/shell/git-prompt.sh

_prompt_error() {
    case $? in
        0|130|146) echo "$" ;;
        *) printf "${RED}X${RESET}" ;;
    esac
}

PROMPT_DIRTRIM=3

PS1=""
PS1+="\[$GREEN\]\u\[$RESET\]:"
PS1+="\[$BLUE\]\w\[$RESET\]"
PS1+="\[$MAGENTA\]"'$(__git_ps1 "(%s)")'"\[$RESET\]"
PS1+=""
PS1+='$(_prompt_error)'
PS1+=" "



################################################################################
###  SOURCE SHELL FILES
################################################################################

files=(
    "$HOME/.config/shell/functions"
    "$HOME/.config/shell/aliases"
)
for file in "${files[@]}"; do
    [[ -r "$file" ]] && source "$file"
done
unset files

eval "$(zoxide init bash)"



################################################################################
###  ROS
################################################################################

alias social='cd $HOME/Desktop/social'
alias socia='social'
alias socila='social'
alias nav='cd $HOME/pepper_navigation'
alias nva='nav'

setup_files=(
    /opt/ros/noetic/setup.bash
    /root/gazebo/devel/setup.bash
    "$HOME/dev/dotfiles/bin/uni/shell"
)
for file in "${setup_files[@]}"; do
   [[ -f "$file" ]] && source "$file"
done
unset setup_files
