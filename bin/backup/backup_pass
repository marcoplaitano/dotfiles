#!/bin/bash

# File:   backup_pass
# Author: Marco Plaitano
# Date:   24 Feb 2023
# Brief:  Export/Import backup copy of pass credentials.

set -e

readonly _PASS_DIR="$PASSWORD_STORE_DIR"
readonly _BACKUP_ZIP="$HOME/passwords.tar.gz"


_die() {
    [[ -n $1 ]] && echo "$1" >&2
    exit 1
}

_help() {
    printf "Usage: %s OPTION
Export/Import backup copy of pass credentials.

-h, --help          Show this guide and exit
-e, --export        Create pass backup to   %s
-i, --import        Import pass backup from %s
" "$(basename "$0")" "$_BACKUP_ZIP" "$_BACKUP_ZIP"
}

# Make sure that the script won't be executed more than once at a time.
_check_pid() {
    local PIDFILE
    PIDFILE="/tmp/$(basename "$0").pid"
    if [[ -f "$PIDFILE" ]]; then
        pid=$(cat "$PIDFILE")
        # Process found, script already running, do not execute this.
        ps -p "$pid" &>/dev/null && _die "Script already running."
    fi
    # Script wasn't running, write its pid.
    echo $$ > "$PIDFILE"
}

_export() {
    [[ ! -d "$_PASS_DIR" ]] && _die "Pass dir '$_PASS_DIR' not found."
    # Remove previous backup.
    [[ -e "$_BACKUP_ZIP" ]] && rm "$_BACKUP_ZIP"
    # Compress directory.
    tar -czf "$_BACKUP_ZIP" -C "$_PASS_DIR/.." ./"$(basename "$_PASS_DIR")"
    echo "Exported passwords to '$_BACKUP_ZIP'."
}

_import() {
    [[ ! -e "$_BACKUP_ZIP" ]] && _die "Backup not found at '$_BACKUP_ZIP'."
    # Extract directory.
    tar -xzf "$_BACKUP_ZIP" -C "$_PASS_DIR/.."
    # Remove files no longer needed.
    [[ -e "$_BACKUP_ZIP" ]] && rm "$_BACKUP_ZIP"
}


_check_pid

# Parse command-line arguments.
case "$1" in
    '' | -h | --help)
        _help ; exit ;;
    -e | --export)
        _export ;;
    -i | --import)
        _import ;;
    *)
        _die "Argument '$1' not recognized." ;;
esac
