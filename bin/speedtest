#!/bin/bash

# File:   speedtest
# Author: Marco Plaitano
# Date:   17 Apr 2023
# Brief:  Check internet speed.


_die() {
    [[ -n $1 ]] && error_msg="$1" || error_msg="Error in $(basename "$0")."
    if [[ $TERM != dumb ]]; then
        echo "$error_msg" >&2
    else
        notify-send "Error in $(basename "$0")" "$error_msg"
    fi
    exit 1
}

# Make sure that the script won't be executed more than once at a time.
_check_pid() {
    local PIDFILE="/tmp/$(basename "$0").pid"
    if [[ -f "$PIDFILE" ]]; then
        pid=$(cat "$PIDFILE")
        # Process found, script already running, do not execute this.
        ps -p "$pid" &>/dev/null && _die "Script already running."
    fi
    # Script wasn't running, write its pid.
    echo $$ > "$PIDFILE"
}

_check_pid


readonly _OUTPUT_FILE="/tmp/internetspeed"
readonly _SCRIPT_FILE="/var/tmp/speedtest.py"
readonly _SOURCE_FILE="https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py"

# Download script, if needed.
if [[ ! -f "$_SCRIPT_FILE" ]]; then
    echo "Downloading script..."
    if ! curl -s "$_SOURCE_FILE" -o "$_SCRIPT_FILE" ; then
        _die "Could not download python script."
    fi
fi

# Execute script.
python3 "$_SCRIPT_FILE" --simple --no-upload --secure > $_OUTPUT_FILE

# Define ouptut string.
if [[ $? -ne 0 ]]; then
    str="No internet"
else
    str="$(grep "Download:" $_OUTPUT_FILE)"
fi

# Show results.
echo "$str"
if [[ $TERM == dumb ]]; then
    notify-send "Internet Speed" "$str"
fi
