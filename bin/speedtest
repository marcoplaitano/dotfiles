#!/bin/bash

# File:   speedtest
# Author: Marco Plaitano
# Date:   17 Apr 2023
# Brief:  Check internet speed.


_die() {
    [[ -n $1 ]] && error_msg="$1" || error_msg="Error in $(basename "$0")."
    if [[ $TERM != dumb ]]; then
        echo "$error_msg" >&2
    else
        notify-send "Error in $(basename "$0")" "$error_msg"
    fi
    exit 1
}

_help() {
    printf "Usage: $(basename "$0")
Show internet download speed.

-h, --help      Show this guide and exit.
"
}

# Make sure that the script won't be executed more than once at a time.
_check_pid() {
    local PIDFILE
    PIDFILE="/tmp/$(basename $0).pid"
    if [[ -f "$PIDFILE" ]]; then
        pid=$(cat "$PIDFILE")
        # Process found, script already running.
        if ps -p "$pid" &>/dev/null ; then
            _die "Script already running."
        # Process not found, overwrite.
        else
            echo $$ > "$PIDFILE"
        fi
    # Script wasn't running, write its pid onto file.
    else
        echo $$ > "$PIDFILE"
    fi
}

_check_pid


# Parse command line arguments.
while [[ -n $1 ]]; do
    case "$1" in
        -h | --help)
            _help ; exit ;;
        *)
            _die "Argument '$1' not recognized." ;;
    esac
done

readonly OUTPUT_FILE="/tmp/internetspeed"
readonly SCRIPT_FILE="/var/tmp/speedtest.py"
readonly SOURCE_FILE="https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py"


if [[ ! -f "$SCRIPT_FILE" ]]; then
    echo "Downloading script..."
    if ! curl -s "$SOURCE_FILE" -o "$SCRIPT_FILE" ; then
        _die "Could not download python script."
    fi
fi

python3 "$SCRIPT_FILE" --simple --no-upload --secure > $OUTPUT_FILE

# Define ouptut string.
if [[ $? -ne 0 ]]; then
    str="No internet"
else
    str="$(grep "Download:" $OUTPUT_FILE)"
fi

# Show results.
if [[ $TERM != dumb ]]; then
    echo "$str"
else
    notify-send "Internet Speed" "$str"
fi
