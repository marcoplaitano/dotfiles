#!/bin/bash

# File:   theme_vim
# Author: Marco Plaitano
# Date:   07 Mar 2023
# Brief:  Set new nvim theme.


_die() {
    [[ -n $1 ]] && error_msg="$1" || error_msg="Error in $(basename "$0")."
    if [[ $TERM != dumb ]]; then
        echo "$error_msg" >&2
    else
        notify-send "Error in $(basename "$0")" "$error_msg"
    fi
    exit 1
}

_help() {
    printf "Usage: $(basename "$0") THEME
Apply new nvim theme.

-h, --help      Show this guide and exit.
"
}

# Determine whether terminal's background color is light or dark so that
# vim's background mode can be chosen accordingly.
_background_mode() {
    # Xfce4 Terminal
    #background=$(grep Background "$HOME/.config/xfce4/terminal/terminalrc")
    #background=${background#*"ColorBackground="}

    # Alacritty
    background="$(grep -m 1 background $THEME_FILE_ALACRITTY | awk '{print $6}')"
    background="${background::-1}"
    background=${background//\'/}
    background=${background//\"/}

    is_background_light=$(cat <<EOF
from math import sqrt
c = "$background"
r,g,b = tuple(int(c.lstrip('#')[i:i+2], 16) for i in (0,2,4))
hsp = sqrt(0.299 * r*r + 0.587 * g*g + 0.114 * b*b)
print("light") if hsp > 127.5 else print("dark")
EOF
    )
    if [[ $(python3 -c "$is_background_light") == light ]]; then
        echo "light"
    else
        echo "dark"
    fi
}


# Parse command line arguments.
case "$1" in
    '')
        exit ;;
    -h | --help)
        _help ; exit ;;
    *)
        theme="$1" ;;
esac

_VIM_THEME_FILE="$HOME/.config/nvim/lua/moonvim/colorscheme.lua"
# Clear contents of the configuration file.
:> "$_VIM_THEME_FILE"

# Specify whether to keep light or dark background.
echo "vim.go.background = \"$(_background_mode)\"" > "$_VIM_THEME_FILE"

# Set theme.
echo "vim.cmd([[ colorscheme $theme ]])" >> "$_VIM_THEME_FILE"
echo "return \"$theme\"" >> "$_VIM_THEME_FILE"
