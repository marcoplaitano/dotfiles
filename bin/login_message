#!/bin/bash

# File:   login_message
# Author: Marco Plaitano
# Date:   18 Feb 2023
# Brief:  Display a welcome message (on each first shell login after boot).


_die() {
    [[ -n $1 ]] && echo "$1" >&2
    exit 1
}

_help() {
    printf "Usage: %s [OPTION]
Show login message when a new shell is opened.

-h, --help      Show this guide and exit
--once          Print message only if not done since last system boot
" "$(basename "$0")"
}

_show_message() {
    printf "Last login: %s\n" "$(last_login)"
    printf "Welcome back %s!\n\n" "${USER^}"
    quotes
    printf "\n"
    repositories
}


readonly _STATUS_FILE="$HOME/.config/user/lastlogin"

# Parse command line arguments.
case "$1" in
    '') ;;
    -h | --help)
        _help ; exit ;;
    --once)
        once=1 ;;
    *)
        _die "Argument '$1' not recognized." ;;
esac

if [[ -n $once ]]; then
    # Time of last (re)boot.
    login_time=$(last | head -n 50 | grep boot -m 1 | \
                awk '{print $5, $6, $7, $8}' | \
                xargs -rI {} date +%F' '%T --date={})
    login_time=$(date -d"$login_time" +%s 2>/dev/null)
    # If not found it means last login was too long ago, the message definitely
    # has not to be displayed.
    [[ -z $login_time ]] && exit

    last_message_time=$(cat "$_STATUS_FILE" 2>/dev/null)
    last_message_time=$(date -d"$last_message_time" +%s 2>/dev/null)
    # Do nothing if the message has been already shown AFTER the last boot time.
    if [[ "$last_message_time" -gt "$login_time" ]]; then
        exit
    fi

    # Save new timestamp of last execution of this script.
    curr_time="$(date +%F' '%T)"
    echo "$curr_time" > "$_STATUS_FILE"
fi

_show_message
