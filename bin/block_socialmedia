#!/bin/bash

# File:   block_socialmedia
# Author: Marco Plaitano
# Date:   19 Sep 2023
# Brief:  Toggle access to social media websites by redirecting their domain
#         to localhost.

set -eu

# This script needs to be run with sudo because it writes on /etc/hosts.
if [[ $EUID -ne 0 ]]; then
    echo "Usage: sudo $(basename $0)" >&2
    exit 1
fi

# Make sure that the script won't be executed more than once at a time.
_check_pid() {
    local PIDFILE
    PIDFILE="/tmp/$(basename $0).pid"
    if [[ -f "$PIDFILE" ]]; then
        pid=$(cat "$PIDFILE")
        # Process found, script already running.
        if ps -p "$pid" &>/dev/null ; then
            echo "Script already running." ; exit 1
        # Process not found, overwrite.
        else
            echo $$ > "$PIDFILE"
        fi
    # Script wasn't running, write its pid onto file.
    else
        echo $$ > "$PIDFILE"
    fi
}


# Register new status: either 'blocked' or 'unblocked'.
_set_status() {
    status="$1"
    echo "$status" > "$_STATUS_FILE"
    echo "Social Media are now $status."
}

_block() {
    for site in "${_SOCIAL_MEDIA[@]}"; do
        echo "127.0.0.1  $site" >> /etc/hosts
    done
    _set_status blocked
}

_unblock() {
    for site in "${_SOCIAL_MEDIA[@]}"; do
        sed -i "/^127.0.0.1  $site/d" /etc/hosts
    done
    _set_status unblocked
}

_is_unblocked() {
    if grep -q unblocked "$_STATUS_FILE"; then
        return 0
    else
        return 1
    fi
}


_check_pid

_SOCIAL_MEDIA=(
    "instagram.com"
    "www.instagram.com"
    "reddit.com"
    "www.reddit.com"
    "twitter.com"
    "www.twitter.com"
)

_STATUS_FILE="$HOME/.cache/socialmedia_block_status"
[[ ! -f "$_STATUS_FILE" ]] && _set_status unblocked >/dev/null

if _is_unblocked; then
    _block
else
    _unblock
fi
