#!/bin/bash

# File:   block_socialmedia
# Author: Marco Plaitano
# Date:   19 Sep 2023
# Brief:  Toggle access to social media websites by redirecting their domain
#         to localhost.

set -e

readonly _STATUS_FILE="$HOME/.cache/socialmedia_block_status"
readonly _WAIT_TIME=20  # Time to wait when unblocking is requested.
readonly _SOCIAL_MEDIA=(
    "instagram.com"
    "twitter.com"
    "youtube.com"
)


_die() {
    [[ -n $1 ]] && echo "$1" >&2
    exit 1
}

_help() {
    printf "Usage: $(basename "$0") [OPTION]
Toggle access to social media websites by redirecting their domain
to localhost.

-h, --help      Show this guide and exit.
--status        Print status: 'blocked' or 'unblocked'.
"
}

# Make sure that the script won't be executed more than once at a time.
_check_pid() {
    local PIDFILE
    PIDFILE="/tmp/$(basename $0).pid"
    if [[ -f "$PIDFILE" ]]; then
        pid=$(cat "$PIDFILE")
        # Process found, script already running, do not execute this.
        ps -p "$pid" &>/dev/null && _die "Script already running."
    fi
    # Script wasn't running, write its pid.
    echo $$ > "$PIDFILE"
}

# Register new status: either 'blocked' or 'unblocked'.
_set_status() {
    echo "$1" > "$_STATUS_FILE"
}

# Print status: either 'blocked' or 'unblocked'.
_get_status() {
    cat "$_STATUS_FILE"
}

_is_unblocked() {
    grep -q unblocked "$_STATUS_FILE"
}

_block() {
    for site in "${_SOCIAL_MEDIA[@]}"; do
        echo "127.0.0.1  $site" >> /etc/hosts
        echo "127.0.0.1  www.$site" >> /etc/hosts
    done
    _set_status blocked
    echo "Social Media are now blocked."
}

_unblock() {
    for site in "${_SOCIAL_MEDIA[@]}"; do
        sed -i "/^127.0.0.1  $site/d" /etc/hosts
        sed -i "/^127.0.0.1  www.$site/d" /etc/hosts
    done
    _set_status unblocked
    echo "Social Media are now unblocked."
}

_wait() {
    echo "Wait $_WAIT_TIME seconds..."
    sleep $_WAIT_TIME
}


# This script needs to be run with sudo because it writes on /etc/hosts.
if [[ $EUID -ne 0 ]]; then
    _die "Usage: sudo $(basename $0)"
fi

_check_pid

[[ ! -f "$_STATUS_FILE" ]] && _set_status unblocked

# Parse command line arguments.
case "$1" in
    '')          ;;
    -h | --help) _help ; exit ;;
    --status)    _get_status ; exit ;;
    *)           _die "Argument '$1' not recognized." ;;
esac

if _is_unblocked; then
    _block
else
    _wait
    _unblock
fi
